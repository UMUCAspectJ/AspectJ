/*
 * This file handles the creation of the visual for the CrossRefs window
 * as well as generating the content of that window.
 * TBA = To Be Added
 */
package org.nb.aspectj.actions;

import java.awt.Color;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.HelpCtx;
import org.openide.util.Lookup;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//org.nb.aspectj.actions//CrossRefs//EN",
        autostore = false
)
@TopComponent.Description(
        preferredID = "CrossRefsTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)

@TopComponent.Registration(mode = "leftSlidingSide", openAtStartup = false)
@ActionID(category = "Window", id = "org.nb.aspectj.actions.CrossRefsTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_CrossRefsAction",
        preferredID = "CrossRefsTopComponent"
)
@Messages({
    "CTL_CrossRefsAction=CrossRefs",
    "CTL_CrossRefsTopComponent=AspectJ CrossRefs",
    "HINT_CrossRefsTopComponent=This window shows information about project components"
})
public final class CrossRefsTopComponent extends TopComponent {

    public CrossRefsTopComponent() 
    {
        //Need to write method to generate the content for the CrossRefs window (TBA)
        
        initComponents(); //Create the visual for the CrossRefs window
        
        setName(Bundle.CTL_CrossRefsTopComponent());
        setToolTipText(Bundle.HINT_CrossRefsTopComponent());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        bottomBarPanel = new javax.swing.JPanel();
        showNonPublicMembersButton = new javax.swing.JButton();
        showFieldsButton = new javax.swing.JButton();
        showStaticMethodsButton = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        showAdvicesButton = new javax.swing.JButton();
        showPointcutsButton = new javax.swing.JButton();
        sortByNameButton = new javax.swing.JButton();
        sortBySourceButton = new javax.swing.JButton();
        navigateBackButton = new javax.swing.JButton();
        navigateForwardButton = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        showMethodsButton = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        prebuildJPanel = new javax.swing.JPanel();

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(CrossRefsTopComponent.class, "CrossRefsTopComponent.jLabel1.text")); // NOI18N

        bottomBarPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        showNonPublicMembersButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nb/aspectj/actions/showNonPublicMembers.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(showNonPublicMembersButton, org.openide.util.NbBundle.getMessage(CrossRefsTopComponent.class, "CrossRefsTopComponent.showNonPublicMembersButton.text")); // NOI18N
        showNonPublicMembersButton.setBorderPainted(false);
        showNonPublicMembersButton.setFocusPainted(false);
        showNonPublicMembersButton.setFocusable(false);
        showNonPublicMembersButton.setMaximumSize(new java.awt.Dimension(25, 25));
        showNonPublicMembersButton.setMinimumSize(new java.awt.Dimension(25, 25));
        showNonPublicMembersButton.setName("showNonPublicMembers"); // NOI18N
        showNonPublicMembersButton.setPreferredSize(new java.awt.Dimension(25, 25));
        showNonPublicMembersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showNonPublicMembersButtonActionPerformed(evt);
            }
        });

        showFieldsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nb/aspectj/actions/showFields.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(showFieldsButton, org.openide.util.NbBundle.getMessage(CrossRefsTopComponent.class, "CrossRefsTopComponent.showFieldsButton.text")); // NOI18N
        showFieldsButton.setBorderPainted(false);
        showFieldsButton.setFocusPainted(false);
        showFieldsButton.setFocusable(false);
        showFieldsButton.setMaximumSize(new java.awt.Dimension(25, 25));
        showFieldsButton.setMinimumSize(new java.awt.Dimension(25, 25));
        showFieldsButton.setName("showFields"); // NOI18N
        showFieldsButton.setPreferredSize(new java.awt.Dimension(25, 25));
        showFieldsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showFieldsButtonActionPerformed(evt);
            }
        });

        showStaticMethodsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nb/aspectj/actions/showStaticMembers.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(showStaticMethodsButton, org.openide.util.NbBundle.getMessage(CrossRefsTopComponent.class, "CrossRefsTopComponent.showStaticMethodsButton.text")); // NOI18N
        showStaticMethodsButton.setBorderPainted(false);
        showStaticMethodsButton.setFocusPainted(false);
        showStaticMethodsButton.setFocusable(false);
        showStaticMethodsButton.setMaximumSize(new java.awt.Dimension(25, 25));
        showStaticMethodsButton.setMinimumSize(new java.awt.Dimension(25, 25));
        showStaticMethodsButton.setName("showStaticMembers"); // NOI18N
        showStaticMethodsButton.setPreferredSize(new java.awt.Dimension(25, 25));
        showStaticMethodsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showStaticMethodsButtonActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nb/aspectj/actions/showMethods.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton4, org.openide.util.NbBundle.getMessage(CrossRefsTopComponent.class, "CrossRefsTopComponent.jButton4.text")); // NOI18N
        jButton4.setBorderPainted(false);
        jButton4.setMaximumSize(new java.awt.Dimension(25, 25));
        jButton4.setMinimumSize(new java.awt.Dimension(25, 25));
        jButton4.setName("showMethods"); // NOI18N
        jButton4.setPreferredSize(new java.awt.Dimension(25, 25));

        showAdvicesButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nb/aspectj/actions/showAdvices.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(showAdvicesButton, org.openide.util.NbBundle.getMessage(CrossRefsTopComponent.class, "CrossRefsTopComponent.showAdvicesButton.text")); // NOI18N
        showAdvicesButton.setBorderPainted(false);
        showAdvicesButton.setFocusPainted(false);
        showAdvicesButton.setFocusable(false);
        showAdvicesButton.setMaximumSize(new java.awt.Dimension(25, 25));
        showAdvicesButton.setMinimumSize(new java.awt.Dimension(25, 25));
        showAdvicesButton.setName("showAdvices"); // NOI18N
        showAdvicesButton.setPreferredSize(new java.awt.Dimension(25, 25));
        showAdvicesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showAdvicesButtonActionPerformed(evt);
            }
        });

        showPointcutsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nb/aspectj/actions/showPointcuts.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(showPointcutsButton, org.openide.util.NbBundle.getMessage(CrossRefsTopComponent.class, "CrossRefsTopComponent.showPointcutsButton.text")); // NOI18N
        showPointcutsButton.setBorderPainted(false);
        showPointcutsButton.setFocusPainted(false);
        showPointcutsButton.setFocusable(false);
        showPointcutsButton.setMaximumSize(new java.awt.Dimension(25, 25));
        showPointcutsButton.setMinimumSize(new java.awt.Dimension(25, 25));
        showPointcutsButton.setName("showPointcuts"); // NOI18N
        showPointcutsButton.setPreferredSize(new java.awt.Dimension(25, 25));
        showPointcutsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPointcutsButtonActionPerformed(evt);
            }
        });

        sortByNameButton.setBackground(java.awt.Color.darkGray);
        sortByNameButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nb/aspectj/actions/sortByName.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(sortByNameButton, org.openide.util.NbBundle.getMessage(CrossRefsTopComponent.class, "CrossRefsTopComponent.sortByNameButton.text")); // NOI18N
        sortByNameButton.setBorderPainted(false);
        sortByNameButton.setFocusPainted(false);
        sortByNameButton.setFocusable(false);
        sortByNameButton.setMaximumSize(new java.awt.Dimension(25, 25));
        sortByNameButton.setMinimumSize(new java.awt.Dimension(25, 25));
        sortByNameButton.setName("sortByName"); // NOI18N
        sortByNameButton.setPreferredSize(new java.awt.Dimension(25, 25));
        sortByNameButton.setSelected(true);
        sortByNameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortByNameButtonActionPerformed(evt);
            }
        });

        sortBySourceButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nb/aspectj/actions/sortBySource.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(sortBySourceButton, org.openide.util.NbBundle.getMessage(CrossRefsTopComponent.class, "CrossRefsTopComponent.sortBySourceButton.text")); // NOI18N
        sortBySourceButton.setBorderPainted(false);
        sortBySourceButton.setFocusPainted(false);
        sortBySourceButton.setFocusable(false);
        sortBySourceButton.setMaximumSize(new java.awt.Dimension(25, 25));
        sortBySourceButton.setMinimumSize(new java.awt.Dimension(25, 25));
        sortBySourceButton.setName("sortBySource"); // NOI18N
        sortBySourceButton.setPreferredSize(new java.awt.Dimension(25, 25));
        sortBySourceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortBySourceButtonActionPerformed(evt);
            }
        });

        navigateBackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nb/aspectj/actions/navigateBack.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(navigateBackButton, org.openide.util.NbBundle.getMessage(CrossRefsTopComponent.class, "CrossRefsTopComponent.navigateBackButton.text")); // NOI18N
        navigateBackButton.setBorderPainted(false);
        navigateBackButton.setFocusPainted(false);
        navigateBackButton.setFocusable(false);
        navigateBackButton.setMaximumSize(new java.awt.Dimension(25, 25));
        navigateBackButton.setMinimumSize(new java.awt.Dimension(25, 25));
        navigateBackButton.setName("navigateBack"); // NOI18N
        navigateBackButton.setPreferredSize(new java.awt.Dimension(25, 25));

        navigateForwardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nb/aspectj/actions/navigateForward.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(navigateForwardButton, org.openide.util.NbBundle.getMessage(CrossRefsTopComponent.class, "CrossRefsTopComponent.navigateForwardButton.text")); // NOI18N
        navigateForwardButton.setBorderPainted(false);
        navigateForwardButton.setFocusPainted(false);
        navigateForwardButton.setFocusable(false);
        navigateForwardButton.setMaximumSize(new java.awt.Dimension(25, 25));
        navigateForwardButton.setMinimumSize(new java.awt.Dimension(25, 25));
        navigateForwardButton.setName("navigateForward"); // NOI18N
        navigateForwardButton.setPreferredSize(new java.awt.Dimension(25, 25));

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nb/aspectj/actions/showMethods.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton11, org.openide.util.NbBundle.getMessage(CrossRefsTopComponent.class, "CrossRefsTopComponent.jButton11.text")); // NOI18N
        jButton11.setBorderPainted(false);
        jButton11.setMaximumSize(new java.awt.Dimension(25, 25));
        jButton11.setMinimumSize(new java.awt.Dimension(25, 25));
        jButton11.setName("showMethods"); // NOI18N
        jButton11.setPreferredSize(new java.awt.Dimension(25, 25));

        showMethodsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nb/aspectj/actions/showMethods.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(showMethodsButton, org.openide.util.NbBundle.getMessage(CrossRefsTopComponent.class, "CrossRefsTopComponent.showMethodsButton.text")); // NOI18N
        showMethodsButton.setBorderPainted(false);
        showMethodsButton.setFocusPainted(false);
        showMethodsButton.setFocusable(false);
        showMethodsButton.setMaximumSize(new java.awt.Dimension(25, 25));
        showMethodsButton.setMinimumSize(new java.awt.Dimension(25, 25));
        showMethodsButton.setName("showMethods"); // NOI18N
        showMethodsButton.setPreferredSize(new java.awt.Dimension(25, 25));
        showMethodsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showMethodsButtonActionPerformed(evt);
            }
        });

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nb/aspectj/actions/showMethods.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton13, org.openide.util.NbBundle.getMessage(CrossRefsTopComponent.class, "CrossRefsTopComponent.jButton13.text")); // NOI18N
        jButton13.setBorderPainted(false);
        jButton13.setMaximumSize(new java.awt.Dimension(25, 25));
        jButton13.setMinimumSize(new java.awt.Dimension(25, 25));
        jButton13.setName("showMethods"); // NOI18N
        jButton13.setPreferredSize(new java.awt.Dimension(25, 25));

        jButton14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/nb/aspectj/actions/showMethods.gif"))); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jButton14, org.openide.util.NbBundle.getMessage(CrossRefsTopComponent.class, "CrossRefsTopComponent.jButton14.text")); // NOI18N
        jButton14.setBorderPainted(false);
        jButton14.setMaximumSize(new java.awt.Dimension(25, 25));
        jButton14.setMinimumSize(new java.awt.Dimension(25, 25));
        jButton14.setName("showMethods"); // NOI18N
        jButton14.setPreferredSize(new java.awt.Dimension(25, 25));

        javax.swing.GroupLayout bottomBarPanelLayout = new javax.swing.GroupLayout(bottomBarPanel);
        bottomBarPanel.setLayout(bottomBarPanelLayout);
        bottomBarPanelLayout.setHorizontalGroup(
            bottomBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bottomBarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bottomBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bottomBarPanelLayout.createSequentialGroup()
                        .addGroup(bottomBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(showMethodsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showFieldsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showStaticMethodsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showNonPublicMembersButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showAdvicesButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showPointcutsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sortByNameButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sortBySourceButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(navigateBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(navigateForwardButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(bottomBarPanelLayout.createSequentialGroup()
                        .addGroup(bottomBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(313, 313, 313))))
        );
        bottomBarPanelLayout.setVerticalGroup(
            bottomBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bottomBarPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bottomBarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(navigateForwardButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(navigateBackButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sortBySourceButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sortByNameButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showPointcutsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showAdvicesButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(bottomBarPanelLayout.createSequentialGroup()
                        .addComponent(showMethodsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(showStaticMethodsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showFieldsButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showNonPublicMembersButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        prebuildJPanel.setBackground(new java.awt.Color(255, 0, 51));

        javax.swing.GroupLayout prebuildJPanelLayout = new javax.swing.GroupLayout(prebuildJPanel);
        prebuildJPanel.setLayout(prebuildJPanelLayout);
        prebuildJPanelLayout.setHorizontalGroup(
            prebuildJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        prebuildJPanelLayout.setVerticalGroup(
            prebuildJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(prebuildJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(bottomBarPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(44, 44, 44)
                    .addComponent(jLabel1)
                    .addContainerGap(203, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(prebuildJPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 323, Short.MAX_VALUE)
                .addComponent(bottomBarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1)
                    .addContainerGap(372, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Handles the actions performed when showMethodsButton clicked.  Changes
     * the appearance of the button to signify if it is selected or not and 
     * needs to update the content component of the CrossRefs window (TBA)
     * @param evt 
     */
    private void showMethodsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showMethodsButtonActionPerformed
        // TODO add your handling code here:
        showMethodsButton.setSelected(!showMethodsButton.isSelected());
        if(showMethodsButton.isSelected())
        {
            showMethodsButton.setBackground(Color.DARK_GRAY);
        }
        else
        {
            showMethodsButton.setBackground(null);
        }
        generateComponentsList();
    }//GEN-LAST:event_showMethodsButtonActionPerformed

    /**
     * Handles the actions performed when showStatic MethodsButton clicked.  
     * Changes the appearance of the button to signify if it is selected or not 
     * and needs to update the content component of the CrossRefs window (TBA)
     * @param evt 
     */
    private void showStaticMethodsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showStaticMethodsButtonActionPerformed
        // TODO add your handling code here:
        showStaticMethodsButton.setSelected(!showStaticMethodsButton.isSelected());
        if(showStaticMethodsButton.isSelected())
        {
            showStaticMethodsButton.setBackground(Color.DARK_GRAY);
        }
        else
        {
            showStaticMethodsButton.setBackground(null);
        }
        generateComponentsList();
    }//GEN-LAST:event_showStaticMethodsButtonActionPerformed

    /**
     * Handles the actions performed when showNonPublicMembersButton clicked.  Changes
     * the appearance of the button to signify if it is selected or not and 
     * needs to update the content component of the CrossRefs window (TBA)
     * @param evt 
     */
    private void showNonPublicMembersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showNonPublicMembersButtonActionPerformed
        // TODO add your handling code here:
        showNonPublicMembersButton.setSelected(!showNonPublicMembersButton.isSelected());
        if(showNonPublicMembersButton.isSelected())
        {
            showNonPublicMembersButton.setBackground(Color.DARK_GRAY);
        }
        else
        {
            showNonPublicMembersButton.setBackground(null);
        }
        generateComponentsList();
    }//GEN-LAST:event_showNonPublicMembersButtonActionPerformed

    /**
     * Handles the actions performed when showFieldsButton clicked.  Changes
     * the appearance of the button to signify if it is selected or not and 
     * needs to update the content component of the CrossRefs window (TBA)
     * @param evt 
     */
    private void showFieldsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showFieldsButtonActionPerformed
        // TODO add your handling code here:
        showFieldsButton.setSelected(!showFieldsButton.isSelected());
        if(showFieldsButton.isSelected())
        {
            showFieldsButton.setBackground(Color.DARK_GRAY);
        }
        else
        {
            showFieldsButton.setBackground(null);
        }
        generateComponentsList();
    }//GEN-LAST:event_showFieldsButtonActionPerformed

    /**
     * Handles the actions performed when showAdvicesButton clicked.  Changes
     * the appearance of the button to signify if it is selected or not and 
     * needs to update the content component of the CrossRefs window (TBA)
     * @param evt 
     */
    private void showAdvicesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showAdvicesButtonActionPerformed
        // TODO add your handling code here:
        showAdvicesButton.setSelected(!showAdvicesButton.isSelected());
        if(showAdvicesButton.isSelected())
        {
            showAdvicesButton.setBackground(Color.DARK_GRAY);
        }
        else
        {
            showAdvicesButton.setBackground(null);
        }
        generateComponentsList();
    }//GEN-LAST:event_showAdvicesButtonActionPerformed

    /**
     * Handles the actions performed when showPointcutsButton clicked.  Changes
     * the appearance of the button to signify if it is selected or not and 
     * needs to update the content component of the CrossRefs window (TBA)
     * @param evt 
     */
    private void showPointcutsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPointcutsButtonActionPerformed
        // TODO add your handling code here:
        showPointcutsButton.setSelected(!showPointcutsButton.isSelected());
        if(showPointcutsButton.isSelected())
        {
            showPointcutsButton.setBackground(Color.DARK_GRAY);
        }
        else
        {
            showPointcutsButton.setBackground(null);
        }
        generateComponentsList();
    }//GEN-LAST:event_showPointcutsButtonActionPerformed

    /**
     * Handles the actions performed when sortByNameButton clicked.  Changes
     * the appearance of the button to signify if it is selected or not and 
     * needs to update the content component of the CrossRefs window (TBA)
     * @param evt 
     */
    private void sortByNameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortByNameButtonActionPerformed
        // TODO add your handling code here:        
        if(!sortByNameButton.isSelected())
        {
            sortByNameButton.setBackground(Color.DARK_GRAY);
            sortByNameButton.setSelected(true);
            sortBySourceButton.setSelected(false);
            sortBySourceButton.setBackground(null);
            generateComponentsList();
        }
    }//GEN-LAST:event_sortByNameButtonActionPerformed

    /**
     * Handles the actions performed when sortBySourceButton clicked.  Changes
     * the appearance of the button to signify if it is selected or not and 
     * needs to update the content component of the CrossRefs window (TBA)
     * @param evt 
     */
    private void sortBySourceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortBySourceButtonActionPerformed
        // TODO add your handling code here:
        if(!sortBySourceButton.isSelected())
        {
            sortBySourceButton.setBackground(Color.DARK_GRAY);
            sortBySourceButton.setSelected(true);
            sortByNameButton.setSelected(false);
            sortByNameButton.setBackground(null);
            generateComponentsList();
        }
    }//GEN-LAST:event_sortBySourceButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottomBarPanel;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton navigateBackButton;
    private javax.swing.JButton navigateForwardButton;
    private javax.swing.JPanel prebuildJPanel;
    private javax.swing.JButton showAdvicesButton;
    private javax.swing.JButton showFieldsButton;
    private javax.swing.JButton showMethodsButton;
    private javax.swing.JButton showNonPublicMembersButton;
    private javax.swing.JButton showPointcutsButton;
    private javax.swing.JButton showStaticMethodsButton;
    private javax.swing.JButton sortByNameButton;
    private javax.swing.JButton sortBySourceButton;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
    
    /**
     * Updates the content within the CrossRefs window with information 
     * pertaining to selected buttons (TBA)
     */
    private void generateComponentsList()
    {
        
    }
    
}
